{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n","%cd /content/drive/MyDrive/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3mNsKhjHRm82","executionInfo":{"status":"ok","timestamp":1670438820860,"user_tz":-60,"elapsed":1590,"user":{"displayName":"ARASH KAZEMI DIAZ","userId":"03067868357247151991"}},"outputId":"c0b9d2b1-d1e3-4304-f49b-f17639749e38"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","/content/drive/MyDrive\n"]}]},{"cell_type":"code","source":["%ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_P74ZGO7Rtkv","executionInfo":{"status":"ok","timestamp":1670438822389,"user_tz":-60,"elapsed":225,"user":{"displayName":"ARASH KAZEMI DIAZ","userId":"03067868357247151991"}},"outputId":"dcee5782-b9c5-44c5-af6b-53b27f5071bd"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[0m\u001b[01;34m'Colab Notebooks'\u001b[0m/   \u001b[01;34mIA\u001b[0m/   \u001b[01;34mTFMKuramoto_Arash\u001b[0m/\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"OuDwoppm6Tv7","executionInfo":{"status":"ok","timestamp":1670438803193,"user_tz":-60,"elapsed":2092,"user":{"displayName":"ARASH KAZEMI DIAZ","userId":"03067868357247151991"}},"outputId":"fb605b63-3743-4563-f88f-87ed8f58f113","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["Los archivos FinalDataFrame.csv, Capitales.csv y CAPITALES_CHINGONAS.csv se suponen que son nuestras \"bases de datos\" que hemos guardado en fisico. \n","\n","Las funciones que tienen que ver con:\n","\n","* Sacar destinos de Barajas en Aena: FinalDataFrame\n","* Sacar capitales de Europa en Wikipedia: Capitales\n","* Cruzar la info de las dos tablas anteriores: CAPITALES_CHINGONAS\n","\n","SE EJECUTAN MUY DE VEZ EN CUANDO. Esto tiene que ver con el enfoque datawarehouse. El tema de sus funciones (ETL) es que con una cierta periodicidad actualicen y guarden los datos. Como esta información no cambia de un dia para otro diremos que estos programas se ejecutan una vez al año.\n","\n","En nuestro programa final simplemente tendremos que consultar la infomación de las CAPITALES_CHINGONAS (obviamente estos nombres los cambiamos cuando lo cargue todo en la maquina virtual)."],"metadata":{"id":"wAVgtuH0JI5l"}},{"cell_type":"code","source":["from bs4 import BeautifulSoup\n","import requests\n","import lxml\n","import re\n","import pandas as pd\n","import numpy as np\n","\n","from ETL_AenaToCSV import getDESTINOS\n","from WRAPPER_GetPrecio import getPRECIOS\n","from funciones_capitales import getCapitales, setCapitales "],"metadata":{"id":"fjM36YCWRLrM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Poneer un par de botones del estilo: ¿A donde quieres ir?\n","\n","Capitales Europeas  |||  Capitales Americanas\n","\n","Indicar que como es un \"proyecto\" de momento solo trabajamos con ciudades Europeas.\n","Entonces mostrar este listado bonito "],"metadata":{"id":"rLBUthgKFkTQ"}},{"cell_type":"code","source":["path_output=\"/content/drive/MyDrive/Codigos\"  #Cambiar cuando se pase a linux.\n","ReadCapitales=pd.read_csv(path_output+'/CAPITALES_CHINGONAS.csv')\n","ReadCapitales\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":708},"id":"6X9867qSU167","executionInfo":{"status":"ok","timestamp":1670408177378,"user_tz":-60,"elapsed":352,"user":{"displayName":"Alberto Royo","userId":"08474011219310546093"}},"outputId":"9b4bff7b-600f-4442-d6f1-a531a3105771"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Unnamed: 0                           Destino Aeropuerto\n","0            0  BERLIN-BRANDERBURG WILLY BRANDT         BER\n","1            1                  ROMA /FIUMICINO         FCO\n","2            2            PARIS /BEAUVAIS-TILLE         BVA\n","3            3         PARIS /CHARLES DE GAULLE         CDG\n","4            4                      PARIS /ORLY         ORY\n","5            5                         BUCAREST         OTP\n","6            6                            VIENA         VIE\n","7            7                         VARSOVIA         WAW\n","8            8                  VARSOVIA/MODLIN         WMI\n","9            9                         BUDAPEST         BUD\n","10          10                            PRAGA         PRG\n","11          11                            SOFIA         SOF\n","12          12                         BRUSELAS         BRU\n","13          13              BRUSELAS /CHARLEROI         CRL\n","14          14               ESTOCOLMO /ARLANDA         ARN\n","15          15                           ATENAS         ATH\n","16          16                         HELSINKI         HEL\n","17          17                             RIGA         RIX\n","18          18                       COPENHAGUE         CPH\n","19          19                           DUBLIN         DUB\n","20          20                           LISBOA         LIS"],"text/html":["\n","  <div id=\"df-54d901db-3900-4fea-b30f-7f8ddfec46a5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Destino</th>\n","      <th>Aeropuerto</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>BERLIN-BRANDERBURG WILLY BRANDT</td>\n","      <td>BER</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>ROMA /FIUMICINO</td>\n","      <td>FCO</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>PARIS /BEAUVAIS-TILLE</td>\n","      <td>BVA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>PARIS /CHARLES DE GAULLE</td>\n","      <td>CDG</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>PARIS /ORLY</td>\n","      <td>ORY</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>BUCAREST</td>\n","      <td>OTP</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>VIENA</td>\n","      <td>VIE</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>VARSOVIA</td>\n","      <td>WAW</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>VARSOVIA/MODLIN</td>\n","      <td>WMI</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>BUDAPEST</td>\n","      <td>BUD</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>PRAGA</td>\n","      <td>PRG</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>SOFIA</td>\n","      <td>SOF</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>BRUSELAS</td>\n","      <td>BRU</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>BRUSELAS /CHARLEROI</td>\n","      <td>CRL</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>ESTOCOLMO /ARLANDA</td>\n","      <td>ARN</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>ATENAS</td>\n","      <td>ATH</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>HELSINKI</td>\n","      <td>HEL</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>RIGA</td>\n","      <td>RIX</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>COPENHAGUE</td>\n","      <td>CPH</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>DUBLIN</td>\n","      <td>DUB</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>LISBOA</td>\n","      <td>LIS</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54d901db-3900-4fea-b30f-7f8ddfec46a5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-54d901db-3900-4fea-b30f-7f8ddfec46a5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-54d901db-3900-4fea-b30f-7f8ddfec46a5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["Aqui habrá que correr esta función la cual te busca el vuelo mas barato del mes que viene para todas las capitales. lo suyo seria ofrecer al usuario los 5 destinos más baratos con sus 5 fechas. ESTO HAY QUE PONERLO BONITO... SE PUEDE EJCUTAR DE FORMA OCULTA? sin mostrar codigo\n","\n","NOTA: Ya se que no se puede elegir el dia que quieres viajar. Para eso hace falta encontrar una api que sea mejor... esta es gratis y yo no encontré otra. Cumple su cometido, nos sirve como una fuente de datos más que hemos integrado (de eso va el proyecto). En el informe esto lo podemos justificar con que era la unica opción gratis y que como esto es una propuesta el tema hace su servicio"],"metadata":{"id":"QSJ2syrTGdv-"}},{"cell_type":"code","source":["getPRECIOS(ReadCapitales,\"w\",path_output)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":708},"id":"hjIH5NPRVUJE","executionInfo":{"status":"ok","timestamp":1670408172002,"user_tz":-60,"elapsed":17603,"user":{"displayName":"Alberto Royo","userId":"08474011219310546093"}},"outputId":"25ea1a53-b8c6-49f5-d0b9-4fc93d91f6f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Unnamed: 0                           Destino Aeropuerto  \\\n","0            0  BERLIN-BRANDERBURG WILLY BRANDT         BER   \n","1            1                  ROMA /FIUMICINO         FCO   \n","2            2            PARIS /BEAUVAIS-TILLE         BVA   \n","3            3         PARIS /CHARLES DE GAULLE         CDG   \n","4            4                      PARIS /ORLY         ORY   \n","5            5                         BUCAREST         OTP   \n","6            6                            VIENA         VIE   \n","7            7                         VARSOVIA         WAW   \n","8            8                  VARSOVIA/MODLIN         WMI   \n","9            9                         BUDAPEST         BUD   \n","10          10                            PRAGA         PRG   \n","11          11                            SOFIA         SOF   \n","12          12                         BRUSELAS         BRU   \n","13          13              BRUSELAS /CHARLEROI         CRL   \n","14          14               ESTOCOLMO /ARLANDA         ARN   \n","15          15                           ATENAS         ATH   \n","16          16                         HELSINKI         HEL   \n","17          17                             RIGA         RIX   \n","18          18                       COPENHAGUE         CPH   \n","19          19                           DUBLIN         DUB   \n","20          20                           LISBOA         LIS   \n","\n","    Precio más barato      Fechas  \n","0                  33  2023-01-16  \n","1                  21  2023-01-18  \n","2                  21  2023-01-29  \n","3                  26  2023-01-30  \n","4                  25  2023-01-17  \n","5                  79  2023-01-17  \n","6                  20  2023-01-01  \n","7                  36  2023-01-20  \n","8                  37  2023-01-25  \n","9                  25  2023-01-17  \n","10                 35  2023-01-17  \n","11                 29  2023-01-10  \n","12                 16  2023-01-31  \n","13                 16  2023-01-31  \n","14                 70  2023-01-25  \n","15                 73  2023-01-15  \n","16                 43  2023-01-24  \n","17                118  2023-01-12  \n","18                 52  2023-01-17  \n","19                 19  2023-01-31  \n","20                 10  2023-01-16  "],"text/html":["\n","  <div id=\"df-47ea2886-5c2b-478c-b4aa-c33e0ce83d32\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Destino</th>\n","      <th>Aeropuerto</th>\n","      <th>Precio más barato</th>\n","      <th>Fechas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>BERLIN-BRANDERBURG WILLY BRANDT</td>\n","      <td>BER</td>\n","      <td>33</td>\n","      <td>2023-01-16</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>ROMA /FIUMICINO</td>\n","      <td>FCO</td>\n","      <td>21</td>\n","      <td>2023-01-18</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>PARIS /BEAUVAIS-TILLE</td>\n","      <td>BVA</td>\n","      <td>21</td>\n","      <td>2023-01-29</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>PARIS /CHARLES DE GAULLE</td>\n","      <td>CDG</td>\n","      <td>26</td>\n","      <td>2023-01-30</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>PARIS /ORLY</td>\n","      <td>ORY</td>\n","      <td>25</td>\n","      <td>2023-01-17</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>BUCAREST</td>\n","      <td>OTP</td>\n","      <td>79</td>\n","      <td>2023-01-17</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>VIENA</td>\n","      <td>VIE</td>\n","      <td>20</td>\n","      <td>2023-01-01</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>VARSOVIA</td>\n","      <td>WAW</td>\n","      <td>36</td>\n","      <td>2023-01-20</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>VARSOVIA/MODLIN</td>\n","      <td>WMI</td>\n","      <td>37</td>\n","      <td>2023-01-25</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>BUDAPEST</td>\n","      <td>BUD</td>\n","      <td>25</td>\n","      <td>2023-01-17</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>PRAGA</td>\n","      <td>PRG</td>\n","      <td>35</td>\n","      <td>2023-01-17</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>SOFIA</td>\n","      <td>SOF</td>\n","      <td>29</td>\n","      <td>2023-01-10</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>BRUSELAS</td>\n","      <td>BRU</td>\n","      <td>16</td>\n","      <td>2023-01-31</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>BRUSELAS /CHARLEROI</td>\n","      <td>CRL</td>\n","      <td>16</td>\n","      <td>2023-01-31</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>ESTOCOLMO /ARLANDA</td>\n","      <td>ARN</td>\n","      <td>70</td>\n","      <td>2023-01-25</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>ATENAS</td>\n","      <td>ATH</td>\n","      <td>73</td>\n","      <td>2023-01-15</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>HELSINKI</td>\n","      <td>HEL</td>\n","      <td>43</td>\n","      <td>2023-01-24</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>RIGA</td>\n","      <td>RIX</td>\n","      <td>118</td>\n","      <td>2023-01-12</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>COPENHAGUE</td>\n","      <td>CPH</td>\n","      <td>52</td>\n","      <td>2023-01-17</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>DUBLIN</td>\n","      <td>DUB</td>\n","      <td>19</td>\n","      <td>2023-01-31</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>LISBOA</td>\n","      <td>LIS</td>\n","      <td>10</td>\n","      <td>2023-01-16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47ea2886-5c2b-478c-b4aa-c33e0ce83d32')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-47ea2886-5c2b-478c-b4aa-c33e0ce83d32 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-47ea2886-5c2b-478c-b4aa-c33e0ce83d32');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]}]}